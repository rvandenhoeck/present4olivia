const matchDict=["momofuku"],wordDict=["momofuku","absolute","academic","accident","accurate","activist","activity","actually","addition","adequate","advanced","advocate","aircraft","alliance","although","analysis","announce","anything","anywhere","apparent","approach","approval","argument","artistic","athletic","attitude","audience","bathroom","behavior","birthday","boundary","building","business","campaign","capacity","category","ceremony","champion","changing","civilian","clinical","clothing","collapse","complain","complete","comprise","computer","conclude","concrete","conflict","confront","confused","congress","consider","constant","consumer","continue","contract","contrary","contrast","convince","corridor","coverage","covering","creation","creative","creature","criminal","criteria","critical","crossing","cultural","currency","customer","darkness","database","daughter","daylight","deadline","deciding","decision","decrease","deferred","definite","delicate","delivery","describe","designer","detailed","diabetes","dialogue","diameter","directly","director","disabled","disagree","disaster","disclose","discount","discover","disorder","disposal","distance","distinct","district","dividend","division","doctrine","document","domestic","dominant","dominate","doubtful","dramatic","dressing","dropping","duration","dynamics","earnings","economic","educated","educator","efficacy","eighteen","election","electric","eligible","emerging","emission","emphasis","employee","employer","endeavor","engaging","engineer","enormous","entirely","entrance","envelope","equality","equation","estimate","evaluate","eventual","everyday","everyone","evidence","exchange","exciting","exercise","existing","explicit","exposure","extended","external","facility","familiar","favorite","featured","feedback","festival","fighting","finished","firewall","flagship","flexible","floating","football","foothill","forecast","foremost","formerly","fourteen","fraction","franklin","frequent","friendly","frontier","function","generate","generous","genomics","goodwill","governor","graduate","graphics","grateful","greatest","guardian","guidance","handling","hardware","headline","heritage","highland","historic","homeless","homepage","hospital","humanity","identify","identity","ideology","imperial","incident","included","increase","indicate","indirect","industry","informal","informed","inherent","initiate","innocent","inspired","instance","integral","intended","interact","interest","interior","internal","internet","interval","intimate","intranet","invasion","investor","involved","isolated","judgment","judicial","junction","keyboard","landlord","language","laughter","learning","leverage","lifetime","lighting","likewise","limiting","literary","location","magazine","magnetic","maintain","majority","marginal","marriage","material","maturity","maximize","meantime","measured","medicine","medieval","memorial","merchant","midnight","military","minimize","minister","ministry","minority","mobility","modeling","moderate","momentum","monetary","moreover","mortgage","mountain","mounting","movement","multiple","musician","national","negative","neighbor","nineteen","normally","northern","notebook","numerous","observer","occasion","offering","official","offshore","operator","opponent","opposite","optimism","optional","ordinary","organize","original","overcome","overhead","overlook","overseas","overview","painting","parallel","parental","patented","patience","peaceful","perceive","periodic","personal","persuade","petition","physical","pipeline","planning","platform","pleasant","pleasure","politics","portable","portrait","position","positive","possible","possibly","pounding","powerful","practice","precious","pregnant","presence","preserve","pressing","pressure","previous","princess","printing","priority","prisoner","probable","probably","producer","profound","progress","properly","property","proposal","proposed","prospect","protocol","provided","provider","province","publicly","purchase","pursuant","quantity","question","rational","reaction","received","receiver","recently","recovery","regional","register","regulate","relation","relative","relevant","reliable","reliance","religion","remember","renowned","repeated","reporter","republic","required","research","resemble","reserved","resident","resigned","resource","response","restrict","revision","rigorous","romantic","sampling","sanction","scenario","schedule","scrutiny","seasonal","secondly","security","sensible","sentence","separate","sequence","sergeant","shipping","shooting","shopping","shortage","shoulder","simplify","situated","slightly","software","solution","somebody","somewhat","southern","speaking","specific","spectrum","spending","sporting","standard","standing","standout","sterling","straight","stranger","strategy","strength","striking","strongly","struggle","stunning","suburban","suddenly","suitable","superior","supposed","surgical","surprise","surround","survival","survivor","sweeping","swimming","symbolic","sympathy","syndrome","tactical","tailored","takeover","tangible","taxation","taxpayer","teaching","teaspoon","teenager","tendency","terminal","terrible","thinking","thirteen","thorough","thousand","threaten","together","tomorrow","touching","tracking","training","transfer","traveled","treasury","triangle","tropical","turnover","ultimate","umbrella","universe","unlawful","unlikely","vacation","valuable","variable","vertical","victoria","violence","volatile","warranty","weakness","weighted","whatever","whenever","wherever","wildlife","wireless","withdraw","woodland","workshop","yourself"],numWords=matchDict.length;function getRandomWord(){const idx=Math.floor(numWords*Math.random());return matchDict[idx]}const wordLength=8,maxGuesses=6;function Tile(){const element=document.createElement("div");element.classList.add("tile-container");const tile=document.createElement("div");tile.classList.add("tile"),element.appendChild(tile);let value="",state="tbd";function get(){return value}function set(letter){tile.innerHTML=letter,value=letter}function clear(letter){tile.innerHTML="",value="",tile.classList.remove("correct","oop","wrong")}const stateActions={correct:setCorrect,oop:setOutOfPlace,wrong:setWrong};function setCorrect(){tile.classList.add("correct")}function setOutOfPlace(){tile.classList.add("oop")}function setWrong(){tile.classList.add("wrong")}function setState(newState){state=newState,stateActions[state]&&stateActions[state]()}function getState(){return state}return{element:element,get:get,set:set,clear:clear,setState:setState,getState:getState}}function createGuessRow(){const element=document.createElement("div");element.classList.add("guess");let idx=0,tiles=[],i=0;for(;i<8;i++){const tile=Tile();element.appendChild(tile.element),tiles.push(tile)}function appendLetter(letter){idx>=8||(tiles[idx].set(letter),idx++)}function deleteLetter(){idx<=0||(idx--,tiles[idx].clear())}function getWord(){return tiles.reduce((prevValue,curTile)=>prevValue+curTile.get(),"")}function clear(){tiles.forEach(tile=>tile.clear()),idx=0}return{element:element,tiles:tiles,appendLetter:appendLetter,deleteLetter:deleteLetter,getWord:getWord,clear:clear}}function createGameBoard(){const element=document.createElement("div");element.classList.add("board");let guesses=[],i=0;for(;i<6;i++){const guess=createGuessRow();element.appendChild(guess.element),guesses.push(guess)}function clear(){guesses.forEach(guess=>guess.clear())}return{element:element,guesses:guesses,clear:clear}}const alphabet=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],keyboardLayout=[["q","w","e","r","t","y","u","i","o","p"],["a","s","d","f","g","h","j","k","l"],["enter","z","x","c","v","b","n","m","delete"]];function createKey(letter,onClick){const element=document.createElement("button");element.classList.add("key"),element.dataset.value=letter,element.innerHTML=letter.toUpperCase(),element.addEventListener("click",onClick);let state="tbd";const stateActions={correct:setCorrect,oop:setOutOfPlace,wrong:setWrong};function setCorrect(){clear(),element.classList.add("correct")}function setOutOfPlace(){clear(),element.classList.add("oop")}function setWrong(){clear(),element.classList.add("wrong")}function setState(newState){state=newState,stateActions[state]&&stateActions[state]()}function getState(){return state}function clear(){element.classList.remove("correct","oop","wrong")}return{letter:letter,element:element,setState:setState,getState:getState,clear:clear}}function createKeyboardRow(row,onClick){const element=document.createElement("div");element.classList.add("keyboard-row");const keys={};return row.forEach(letter=>{const key=createKey(letter,onClick);keys[letter]=key,element.appendChild(key.element)}),{element:element,keys:keys}}function createKeyboad(){const element=document.createElement("div");element.classList.add("keyboard");const keyMap={};let callback;function handleClick(value){callback&&callback(value.srcElement)}function addClickCallback(fn){fn&&"function"==typeof fn&&(callback=fn)}function removeClickCallback(){callback=void 0}function clear(){Object.keys(keyMap).forEach(key=>keyMap[key].clear())}return keyboardLayout.forEach(keyRow=>{const row=createKeyboardRow(keyRow,handleClick);element.appendChild(row.element),Object.assign(keyMap,row.keys)}),{element:element,keyMap:keyMap,addClickCallback:addClickCallback,removeClickCallback:removeClickCallback,clear:clear}}const keyboard=createKeyboad(),keyboardElement=document.getElementById("keyboard");keyboardElement.appendChild(keyboard.element);const gameEl=document.getElementById("game");function MessageDisplay(){const element=document.createElement("div");element.classList.add("message","hide");const text=document.createElement("h4");text.classList.add("text"),element.appendChild(text);let isVisible=!1;const duration=1500;function show(value,keep){isVisible||value&&"string"==typeof value&&(text.innerHTML=value,element.classList.remove("hide"),element.classList.add("show"),isVisible=!0,keep||setTimeout(hide,1500))}function hide(){element.classList.remove("show"),element.classList.add("hide"),isVisible=!1}return{element:element,show:show}}function Game(){let curGuessIndex=0,curGuessLetterIndex=0,curGuessWord="";const gameBoard=createGameBoard();function GuessIterator(){const guesses=gameBoard.guesses,maxIdx=guesses.length-1;let idx=-1,guess=guesses[idx];return{next:function(){return idx>=maxIdx?{value:void 0,done:!0}:(idx++,guess=guesses[idx],{value:guess,done:!1})}}}let guessItr,guess,gameRunning=!1,matchWord="";function setMatchWord(){matchWord=getRandomWord()}const container=document.getElementById("game-container");container.appendChild(gameBoard.element);const message=MessageDisplay();function appendGuessEntry(letter){guess.value&&letter&&"string"==typeof letter&&guess.value.appendLetter(letter)}function deleteGuessEntry(){guess.value&&guess.value.deleteLetter()}function submitGuess(){const word=guess.value.getWord();if(8!==word.length)return void handleShortWord();if(!wordDict.includes(word)&&!matchDict.includes(word))return void handleInvalidWord();const correctGuess=evaluateTiles();if(!correctGuess)return guess=guessItr.next(),void(!0===guess.done&&message.show(matchWord.toUpperCase()));handleCorrectGuess(),endGame()}function evaluateTiles(){let matchLetters=[...matchWord],unmatchedLetters,matchLetter,tileValue,unmatched,correctLetters=0;unmatchedLetters=matchLetters.reduce((obj,letter)=>obj[letter]?(obj[letter]++,obj):(obj[letter]=1,obj),{});const tilesToReEvaluate=[];return guess.value.tiles.forEach((tile,idx)=>{if(tileValue=tile.get(),matchLetter=matchLetters[idx],tileValue===matchLetter)return tile.setState("correct"),updateKeyboard(tileValue,"correct"),unmatchedLetters[tileValue]--,void correctLetters++;tilesToReEvaluate.push(tile)}),tilesToReEvaluate.forEach((tile,idx)=>{if(tileValue=tile.get(),matchLetter=matchLetters[idx],unmatchedLetters[tileValue]>0)return tile.setState("oop"),updateKeyboard(tileValue,"oop"),void unmatchedLetters[tileValue]--;tile.setState("wrong"),updateKeyboard(tileValue,"wrong")}),8===correctLetters}container.appendChild(message.element);const keyboardStatePriority={correct:0,oop:1,wrong:2,tbd:3};function updateKeyboard(key,state){const curState=keyboard.keyMap[key].getState(),curPriority=keyboardStatePriority[curState],newPriority=keyboardStatePriority[state];newPriority>=curPriority||keyboard.keyMap[key].setState(state)}function handleShortWord(){message.show("You need 8 letters, asshole")}function handleInvalidWord(){message.show("I don't like this word, asshole")}function handleCorrectGuess(){message.show("Amazing! We're fine-dining at Momofuku Ko in January 🎅🏻🍣🎉",!0)}function startGame(){gameBoard.clear(),removeListseners(),keyboard.clear(),guessItr=new GuessIterator,guess=guessItr.next(),setMatchWord(),addListeners()}function endGame(){removeListseners(),document.querySelector("audio").play()}function addListeners(){keyboard.addClickCallback(onKeyboardClick),window.addEventListener("keydown",onButtonClick)}function removeListseners(){keyboard.removeClickCallback(),window.removeEventListener("keydown",onButtonClick)}let actions={delete:deleteGuessEntry,backspace:deleteGuessEntry,enter:submitGuess,guess:value=>{appendGuessEntry(value)}};function onButtonClick(evt){parseAction(evt.key)}function onKeyboardClick(el){parseAction(el.dataset.value)}function parseAction(key){if(alphabet.includes(key))return void actions.guess(key);const action=key.toLowerCase();actions[action]&&actions[action]()}return{startGame:startGame}}theGame=new Game,theGame.startGame(),newGameButton.addEventListener("click",e=>{theGame.startGame(),e.target.blur()});